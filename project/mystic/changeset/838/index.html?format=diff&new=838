<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
  
  

  


  
<!-- Mirrored from trac.mystic.cacr.caltech.edu/project/mystic/changeset/838/ by HTTrack Website Copier/3.x [XR&CO'2014], Wed, 18 May 2016 23:22:37 GMT -->
<!-- Added by HTTrack --><meta http-equiv="content-type" content="text/html;charset=utf-8" /><!-- /Added by HTTrack -->
<head>
    <title>
      Changeset 838 â€“ Mystic
    </title>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
        <link rel="search" href="../../search.html" />
        <link rel="prev" href="../837.html" title="Changeset 837" />
        <link rel="last" href="../862.html" title="Changeset 862" />
        <link rel="help" href="../../wiki/TracGuide.html" />
        <link rel="alternate" href="http://trac.mystic.cacr.caltech.edu/project/mystic/changeset/838/?format=diff&amp;new=838" type="text/plain" class="diff" title="Unified Diff" /><link rel="alternate" href="http://trac.mystic.cacr.caltech.edu/project/mystic/changeset/838/?format=zip&amp;new=838" type="application/zip" class="zip" title="Zip Archive" />
        <link rel="next" href="../839.html" title="Changeset 839" />
        <link rel="start" href="../../wiki.html" />
        <link rel="stylesheet" href="../../chrome/common/css/trac.css" type="text/css" /><link rel="stylesheet" href="../../chrome/common/css/changeset.css" type="text/css" /><link rel="stylesheet" href="../../chrome/common/css/diff.css" type="text/css" /><link rel="stylesheet" href="../../chrome/common/css/code.css" type="text/css" />
        <link rel="first" href="../1.html" title="Changeset 1" />
        <link rel="shortcut icon" href="http://trac.mystic.cacr.caltech.edu/mystic_icon.ico?" />
        <link rel="icon" href="http://trac.mystic.cacr.caltech.edu/mystic_icon.ico?" />
      <link type="application/opensearchdescription+xml" rel="search" href="../../search/opensearch" title="Search Mystic" />
    <script type="text/javascript" src="../../chrome/common/js/jquery.js"></script><script type="text/javascript" src="../../chrome/common/js/babel.js"></script><script type="text/javascript" src="../../chrome/common/js/trac.js"></script><script type="text/javascript" src="../../chrome/common/js/search.js"></script><script type="text/javascript" src="../../chrome/common/js/diff.js"></script>
    <!--[if lt IE 7]>
    <script type="text/javascript" src="/project/mystic/chrome/common/js/ie_pre7_hacks.js"></script>
    <![endif]-->
    <script type="text/javascript">
      jQuery(document).ready(function($) {
        $(".trac-toggledeleted").show().click(function() {
                  $(this).siblings().find(".trac-deleted").toggle();
                  return false;
        }).click();
        $("#content").find("li.entry h2 a").parent().addAnchor(_("Link to this diff"));
      });
    </script>
    <link rel="stylesheet" type="text/css" href="../../chrome/site/style.css" />
  </head>
  <body>
    <div id="siteheader">
    </div>
    <div id="banner">
      <div id="header">
        <a id="logo" href="http://trac.mystic.cacr.caltech.edu/"><img src="http://www.cacr.caltech.edu/projects/mystic/mystic_banner.png" alt="MYSTIC" height="150" width="400" /></a>
      </div>
      <form id="search" action="http://trac.mystic.cacr.caltech.edu/project/mystic/search" method="get">
        <div>
          <label for="proj-search">Search:</label>
          <input type="text" id="proj-search" name="q" size="18" value="" />
          <input type="submit" value="Search" />
        </div>
      </form>
      <div id="metanav" class="nav">
    <ul>
      <li class="first"><a href="../../login.html">Login</a></li><li><a href="../../wiki/TracGuide.html">Help/Guide</a></li><li><a href="../../about.html">About Trac</a></li><li class="last"><a href="../../prefs.html">Preferences</a></li>
    </ul>
  </div>
    </div>
    <div id="mainnav" class="nav">
    <ul>
      <li class="first"><a href="../../wiki.html">Wiki</a></li><li><a href="../../timeline.html">Timeline</a></li><li><a href="../../roadmap.html">Roadmap</a></li><li class="active"><a href="../../browser.html">Browse Source</a></li><li><a href="../../query.html">View Tickets</a></li><li class="last"><a href="../../search.html">Search</a></li>
    </ul>
  </div>
    <div id="main">
      <div id="ctxtnav" class="nav">
        <h2>Context Navigation</h2>
          <ul>
              <li class="first"><span>&larr; <a class="prev" href="../837.html" title="Changeset 837">Previous Changeset</a></span></li><li class="last"><span><a class="next" href="../839.html" title="Changeset 839">Next Changeset</a> &rarr;</span></li>
          </ul>
        <hr />
      </div>
    <div id="content" class="changeset">
      <div id="title">
            <h1>Changeset 838</h1>
      </div>
      <form id="prefs" action="#">
        <div>
          
  <label for="style">View differences</label>
  <select id="style" name="style">
    <option selected="selected" value="inline">inline</option>
    <option value="sidebyside">side by side</option>
  </select>
  <div class="field">
    <label><input type="radio" name="contextall" value="0" checked="checked" />
             Show</label>
      <label><input type="text" name="contextlines" id="contextlines" size="2" maxlength="3" value="2" />
             lines around each change</label><br />
    <label><input type="radio" name="contextall" value="1" />
           Show the changes in full context</label>
  </div>
  <fieldset id="ignore">
    <legend>Ignore:</legend>
    <div class="field">
      <input type="checkbox" id="ignoreblanklines" name="ignoreblanklines" />
      <label for="ignoreblanklines">Blank lines</label>
    </div>
    <div class="field">
      <input type="checkbox" id="ignorecase" name="ignorecase" />
      <label for="ignorecase">Case changes</label>
    </div>
    <div class="field">
      <input type="checkbox" id="ignorewhitespace" name="ignorewhitespace" />
      <label for="ignorewhitespace">White space changes</label>
    </div>
  </fieldset>
  <div class="buttons">
    <input type="submit" name="update" value="Update" />
  </div>

        </div>
      </form>
      <dl id="overview">
          <dt class="property time">Timestamp:</dt>
          <dd class="time">
             10/16/15 11:18:48
             (<a class="timeline" href="http://trac.mystic.cacr.caltech.edu/project/mystic/timeline?from=2015-10-16T11%3A18%3A48-07%3A00&amp;precision=second" title="2015-10-16T11:18:48-07:00 in Timeline">7 months</a> ago)
          </dd>
          <dt class="property author">Author:</dt>
          <dd class="author">mmckerns</dd>
          <dt class="property message">Message:</dt>
          <dd class="message searchable">
            
            
              <p>
add read_trajectories function; use in model_plotter and log_reader;<br />
enable support functions to take monitor instance and use kwds string<br />
</p>

            
            
          </dd>
          <dt class="property location">Location:</dt>
          <dd class="searchable"><a href="http://trac.mystic.cacr.caltech.edu/project/mystic/browser/mystic/mystic?rev=838">mystic/mystic</a></dd>
        <dt class="property files">
          Files:
        </dt>
        <dd class="files">
          <div class="legend" id="file-legend">
            <dl>
              <dt class="mod"></dt><dd>3 edited</dd>
            </dl>
          </div>
          <br />
          <ul>
            <li>
          <div class="mod"> </div>
            <a title="Show entry in browser" href="http://trac.mystic.cacr.caltech.edu/project/mystic/browser/mystic/mystic/munge.py?rev=838">
              munge.py
            </a>
          <span class="comment">(modified)</span>
              (<a title="Show differences" href="#file0">1 diff</a>)
            </li><li>
          <div class="mod"> </div>
            <a title="Show entry in browser" href="http://trac.mystic.cacr.caltech.edu/project/mystic/browser/mystic/mystic/scripts.py?rev=838">
              scripts.py
            </a>
          <span class="comment">(modified)</span>
              (<a title="Show differences" href="#file1">3 diffs</a>)
            </li><li>
          <div class="mod"> </div>
            <a title="Show entry in browser" href="http://trac.mystic.cacr.caltech.edu/project/mystic/browser/mystic/mystic/support.py?rev=838">
              support.py
            </a>
          <span class="comment">(modified)</span>
              (<a title="Show differences" href="#file2">13 diffs</a>)
            </li>
          </ul>
        </dd>
      </dl>
      <div class="diff">
        <div class="legend" id="diff-legend">
          <h3>Legend:</h3>
          <dl>
            <dt class="unmod"></dt><dd>Unmodified</dd>
            <dt class="add"></dt><dd>Added</dd>
            <dt class="rem"></dt><dd>Removed</dd>
          </dl>
        </div>
        <div class="diff">
  <ul class="entries">
      <li class="entry">
        <h2 id="file0">
          <a href="mystic/mystic/munge.html" title="Show the changeset 838 restricted to mystic/mystic/munge.py">mystic/mystic/munge.py</a>
        </h2>
        <table class="trac-diff inline" summary="Differences" cellspacing="0">
              <colgroup><col class="lineno" /><col class="lineno" /><col class="content" /></colgroup>
              <thead>
                <tr>
                  <th title="Revision 801">
                    <a title="Show revision 801 of this file in browser" href="http://trac.mystic.cacr.caltech.edu/project/mystic/browser/mystic/mystic/munge.py?rev=801#L69">
                      r801</a>
                  </th>
                  <th title="Revision 838">
                    <a title="Show revision 838 of this file in browser" href="http://trac.mystic.cacr.caltech.edu/project/mystic/browser/mystic/mystic/munge.py?rev=838#L69">
                      r838</a>
                  </th>
                  <td>Â </td>
                </tr>
              </thead>
            <tbody class="unmod">
                  <tr>
                          <th>69</th><th>69</th><td class="l"><span>&nbsp; return step, param, cost</span>Â </td>
                  </tr><tr>
                          <th>70</th><th>70</th><td class="l"><span></span>Â </td>
                  </tr>
            </tbody><tbody class="add">
                  <tr class="first">
                          <th>Â </th><th>71</th><td class="r"><ins>def read_trajectories(source):</ins>Â </td>
                  </tr><tr>
                          <th>Â </th><th>72</th><td class="r"><ins>&nbsp; """read trajectories from a convergence logfile or a monitor</ins>Â </td>
                  </tr><tr>
                          <th>Â </th><th>73</th><td class="r"><ins></ins>Â </td>
                  </tr><tr>
                          <th>Â </th><th>74</th><td class="r"><ins>source can either be a monitor instance or a logfile path</ins>Â </td>
                  </tr><tr>
                          <th>Â </th><th>75</th><td class="r"><ins>&nbsp; """</ins>Â </td>
                  </tr><tr>
                          <th>Â </th><th>76</th><td class="r"><ins>&nbsp; if isinstance(source, basestring):</ins>Â </td>
                  </tr><tr>
                          <th>Â </th><th>77</th><td class="r"><ins>&nbsp; &nbsp; step, param, cost = logfile_reader(source)</ins>Â </td>
                  </tr><tr>
                          <th>Â </th><th>78</th><td class="r"><ins>&nbsp; else:</ins>Â </td>
                  </tr><tr>
                          <th>Â </th><th>79</th><td class="r"><ins>&nbsp; &nbsp; step = enumerate(source.id)</ins>Â </td>
                  </tr><tr>
                          <th>Â </th><th>80</th><td class="r"><ins>&nbsp; &nbsp; if len(source) == source.id.count(None):</ins>Â </td>
                  </tr><tr>
                          <th>Â </th><th>81</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; step = [(i,) for (i,j) in step]</ins>Â </td>
                  </tr><tr>
                          <th>Â </th><th>82</th><td class="r"><ins>&nbsp; &nbsp; else:</ins>Â </td>
                  </tr><tr>
                          <th>Â </th><th>83</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; step = list(step)</ins>Â </td>
                  </tr><tr>
                          <th>Â </th><th>84</th><td class="r"><ins>&nbsp; &nbsp; param, cost = source.x, source.y</ins>Â </td>
                  </tr><tr>
                          <th>Â </th><th>85</th><td class="r"><ins>&nbsp; return step, param, cost</ins>Â </td>
                  </tr><tr class="last">
                          <th>Â </th><th>86</th><td class="r"><ins></ins>Â </td>
                  </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>71</th><th>87</th><td class="l"><span></span>Â </td>
                  </tr><tr>
                          <th>72</th><th>88</th><td class="l"><span># read and write monitor (to and from raw data)</span>Â </td>
                  </tr>
            </tbody>
        </table>
      </li>
      <li class="entry">
        <h2 id="file1">
          <a href="mystic/mystic/scripts.html" title="Show the changeset 838 restricted to mystic/mystic/scripts.py">mystic/mystic/scripts.py</a>
        </h2>
        <table class="trac-diff inline" summary="Differences" cellspacing="0">
              <colgroup><col class="lineno" /><col class="lineno" /><col class="content" /></colgroup>
              <thead>
                <tr>
                  <th title="Revision 837">
                    <a title="Show revision 837 of this file in browser" href="http://trac.mystic.cacr.caltech.edu/project/mystic/browser/mystic/mystic/scripts.py?rev=837#L17">
                      r837</a>
                  </th>
                  <th title="Revision 838">
                    <a title="Show revision 838 of this file in browser" href="http://trac.mystic.cacr.caltech.edu/project/mystic/browser/mystic/mystic/scripts.py?rev=838#L17">
                      r838</a>
                  </th>
                  <td>Â </td>
                </tr>
              </thead>
            <tbody class="unmod">
                  <tr>
                          <th>17</th><th>17</th><td class="l"><span></span>Â </td>
                  </tr><tr>
                          <th>18</th><th>18</th><td class="l"><span>from mystic.munge import read_history</span>Â </td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>19</th><th>Â </th><td class="l"><span>from mystic.munge import <del>logfile_reader, raw_to_support, read_raw_file</del></span>Â </td>
                      </tr>
                      <tr class="last">
                        <th>Â </th><th>19</th><td class="r"><span>from mystic.munge import <ins>raw_to_support, read_raw_file, read_trajectories</ins></span>Â </td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>20</th><th>20</th><td class="l"><span></span>Â </td>
                  </tr><tr>
                          <th>21</th><th>21</th><td class="l"><span># globals</span>Â </td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="http://trac.mystic.cacr.caltech.edu/project/mystic/browser/mystic/mystic/scripts.py?rev=837#L31">â€¦</a></th>
                  <th><a href="http://trac.mystic.cacr.caltech.edu/project/mystic/browser/mystic/mystic/scripts.py?rev=838#L31">â€¦</a></th>
                  <td>Â </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>31</th><th>31</th><td class="l"><span>&nbsp; &nbsp; """</span>Â </td>
                  </tr><tr>
                          <th>32</th><th>32</th><td class="l"><span>&nbsp; &nbsp; try: # if it's a logfile, it might be multi-id</span>Â </td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>33</th><th>Â </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; if isinstance(source, basestring):</span>Â </td>
                      </tr><tr>
                        <th>34</th><th>Â </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; step, param, cost = logfile_reader(source)</span>Â </td>
                      </tr><tr>
                        <th>35</th><th>Â </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; else:</span>Â </td>
                      </tr><tr>
                        <th>36</th><th>Â </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; step = enumerate(source.id)</span>Â </td>
                      </tr><tr>
                        <th>37</th><th>Â </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if len(source) == source.id.count(None):</span>Â </td>
                      </tr><tr>
                        <th>38</th><th>Â </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; step = [(i,) for (i,j) in step]</span>Â </td>
                      </tr><tr>
                        <th>39</th><th>Â </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; else:</span>Â </td>
                      </tr><tr>
                        <th>40</th><th>Â </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; step = list(step)</span>Â </td>
                      </tr><tr>
                        <th>41</th><th>Â </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; param, cost = source.x, source.y</span>Â </td>
                      </tr>
                      <tr class="last">
                        <th>Â </th><th>33</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; step, param, cost = read_trajectories(source)</span>Â </td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>42</th><th>34</th><td class="l"><span>&nbsp; &nbsp; except: # it's not a logfile, so read and return</span>Â </td>
                  </tr><tr>
                          <th>43</th><th>35</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; param, cost = read_history(source)</span>Â </td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="http://trac.mystic.cacr.caltech.edu/project/mystic/browser/mystic/mystic/scripts.py?rev=837#L841">â€¦</a></th>
                  <th><a href="http://trac.mystic.cacr.caltech.edu/project/mystic/browser/mystic/mystic/scripts.py?rev=838#L833">â€¦</a></th>
                  <td>Â </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>841</th><th>833</th><td class="l"><span>&nbsp; &nbsp; # parse file contents to get (i,id), cost, and parameters</span>Â </td>
                  </tr><tr>
                          <th>842</th><th>834</th><td class="l"><span>&nbsp; &nbsp; try:</span>Â </td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>843</th><th>Â </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; if instance:</span>Â </td>
                      </tr><tr>
                        <th>844</th><th>Â </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; step = enumerate(instance.id)</span>Â </td>
                      </tr><tr>
                        <th>845</th><th>Â </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if len(instance) == instance.id.count(None):</span>Â </td>
                      </tr><tr>
                        <th>846</th><th>Â </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; step = [(i,) for (i,j) in step]</span>Â </td>
                      </tr><tr>
                        <th>847</th><th>Â </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; else:</span>Â </td>
                      </tr><tr>
                        <th>848</th><th>Â </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; step = list(step)</span>Â </td>
                      </tr><tr>
                        <th>849</th><th>Â </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; param, cost = instance.x, instance.y</span>Â </td>
                      </tr><tr>
                        <th>850</th><th>Â </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; else:</span>Â </td>
                      </tr><tr>
                        <th>851</th><th>Â </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; step, param, cost = logfile_reader(filename)</span>Â </td>
                      </tr>
                      <tr>
                        <th>Â </th><th>835</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; instance = instance if instance else filename</span>Â </td>
                      </tr><tr class="last">
                        <th>Â </th><th>836</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; step, param, cost = read_trajectories(instance)</span>Â </td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>852</th><th>837</th><td class="l"><span>&nbsp; &nbsp; except SyntaxError:</span>Â </td>
                  </tr><tr>
                          <th>853</th><th>838</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; read_raw_file(filename)</span>Â </td>
                  </tr>
            </tbody>
        </table>
      </li>
      <li class="entry">
        <h2 id="file2">
          <a href="mystic/mystic/support.html" title="Show the changeset 838 restricted to mystic/mystic/support.py">mystic/mystic/support.py</a>
        </h2>
        <table class="trac-diff inline" summary="Differences" cellspacing="0">
              <colgroup><col class="lineno" /><col class="lineno" /><col class="content" /></colgroup>
              <thead>
                <tr>
                  <th title="Revision 810">
                    <a title="Show revision 810 of this file in browser" href="http://trac.mystic.cacr.caltech.edu/project/mystic/browser/mystic/mystic/support.py?rev=810#L21">
                      r810</a>
                  </th>
                  <th title="Revision 838">
                    <a title="Show revision 838 of this file in browser" href="http://trac.mystic.cacr.caltech.edu/project/mystic/browser/mystic/mystic/support.py?rev=838#L21">
                      r838</a>
                  </th>
                  <td>Â </td>
                </tr>
              </thead>
            <tbody class="unmod">
                  <tr>
                          <th>21</th><th>21</th><td class="l"><span></span>Â </td>
                  </tr><tr>
                          <th>22</th><th>22</th><td class="l"><span>from mystic.munge import read_history</span>Â </td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>23</th><th>Â </th><td class="l"><span>from mystic.munge import <del>logfile_reader, raw_to_support</del></span>Â </td>
                      </tr>
                      <tr class="last">
                        <th>Â </th><th>23</th><td class="r"><span>from mystic.munge import <ins>raw_to_support, read_trajectories</ins></span>Â </td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>24</th><th>24</th><td class="l"><span>from mystic.tools import factor, flatten</span>Â </td>
                  </tr><tr>
                          <th>25</th><th>25</th><td class="l"><span></span>Â </td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="http://trac.mystic.cacr.caltech.edu/project/mystic/browser/mystic/mystic/support.py?rev=810#L311">â€¦</a></th>
                  <th><a href="http://trac.mystic.cacr.caltech.edu/project/mystic/browser/mystic/mystic/support.py?rev=838#L311">â€¦</a></th>
                  <td>Â </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>311</th><th>311</th><td class="l"><span>&nbsp; &nbsp; __quit = False</span>Â </td>
                  </tr><tr>
                          <th>312</th><th>312</th><td class="l"><span></span>Â </td>
                  </tr>
            </tbody><tbody class="add">
                  <tr class="last first">
                          <th>Â </th><th>313</th><td class="r"><ins>&nbsp; &nbsp; instance = None</ins>Â </td>
                  </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>313</th><th>314</th><td class="l"><span>&nbsp; &nbsp; # handle the special case where list is provided by sys.argv</span>Â </td>
                  </tr><tr>
                          <th>314</th><th>315</th><td class="l"><span>&nbsp; &nbsp; if isinstance(filename, (list,tuple)) and not kwds:</span>Â </td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="http://trac.mystic.cacr.caltech.edu/project/mystic/browser/mystic/mystic/support.py?rev=810#L318">â€¦</a></th>
                  <th><a href="http://trac.mystic.cacr.caltech.edu/project/mystic/browser/mystic/mystic/support.py?rev=838#L319">â€¦</a></th>
                  <td>Â </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>318</th><th>319</th><td class="l"><span>&nbsp; &nbsp; # 'everything else' is essentially the functional interface</span>Â </td>
                  </tr><tr>
                          <th>319</th><th>320</th><td class="l"><span>&nbsp; &nbsp; else:</span>Â </td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>320</th><th>Â </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; out = kwds.get('out', None)</span>Â </td>
                      </tr><tr>
                        <th>321</th><th>Â </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; iter = kwds.get('iter', None)</span>Â </td>
                      </tr><tr>
                        <th>322</th><th>Â </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; param = kwds.get('param', None)</span>Â </td>
                      </tr><tr>
                        <th>323</th><th>Â </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; label = kwds.get('label', None)</span>Â </td>
                      </tr><tr>
                        <th>324</th><th>Â </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; nid = kwds.get('nid', None)</span>Â </td>
                      </tr><tr>
                        <th>325</th><th>Â </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; cost = kwds.get('cost', False)</span>Â </td>
                      </tr><tr>
                        <th>326</th><th>Â </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; legend = kwds.get('legend', False)</span>Â </td>
                      </tr><tr>
                        <th>327</th><th>Â </th><td class="l"><span></span>Â </td>
                      </tr><tr>
                        <th>328</th><th>Â </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; # process "commandline" arguments</span>Â </td>
                      </tr><tr>
                        <th>329</th><th>Â </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; cmdargs = ''</span>Â </td>
                      </tr><tr>
                        <th>330</th><th>Â </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; cmdargs += '' if out is None else '--out={} '.format(out)</span>Â </td>
                      </tr><tr>
                        <th>331</th><th>Â </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; cmdargs += '' if iter is None else '--iter={} '.format(iter)</span>Â </td>
                      </tr><tr>
                        <th>332</th><th>Â </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; cmdargs += '' if param is None else '--param="{}" '.format(param)</span>Â </td>
                      </tr><tr>
                        <th>333</th><th>Â </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; cmdargs += '' if label is None else '--label="{}" '.format(label)</span>Â </td>
                      </tr><tr>
                        <th>334</th><th>Â </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; cmdargs += '' if nid is None else '--nid={} '.format(nid)</span>Â </td>
                      </tr><tr>
                        <th>335</th><th>Â </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; cmdargs += '' if cost == False else '--cost '</span>Â </td>
                      </tr><tr>
                        <th>336</th><th>Â </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; cmdargs += '' if legend == False else '--legend '</span>Â </td>
                      </tr><tr>
                        <th>337</th><th>Â </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; cmdargs = filename.split() + shlex.split(cmdargs)</span>Â </td>
                      </tr>
                      <tr>
                        <th>Â </th><th>321</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; cmdargs = kwds.get('kwds', '')</span>Â </td>
                      </tr><tr>
                        <th>Â </th><th>322</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; if not cmdargs:</span>Â </td>
                      </tr><tr>
                        <th>Â </th><th>323</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; out = kwds.get('out', None)</span>Â </td>
                      </tr><tr>
                        <th>Â </th><th>324</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; iter = kwds.get('iter', None)</span>Â </td>
                      </tr><tr>
                        <th>Â </th><th>325</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; param = kwds.get('param', None)</span>Â </td>
                      </tr><tr>
                        <th>Â </th><th>326</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; label = kwds.get('label', None)</span>Â </td>
                      </tr><tr>
                        <th>Â </th><th>327</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; nid = kwds.get('nid', None)</span>Â </td>
                      </tr><tr>
                        <th>Â </th><th>328</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; cost = kwds.get('cost', False)</span>Â </td>
                      </tr><tr>
                        <th>Â </th><th>329</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; legend = kwds.get('legend', False)</span>Â </td>
                      </tr><tr>
                        <th>Â </th><th>330</th><td class="r"><span></span>Â </td>
                      </tr><tr>
                        <th>Â </th><th>331</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; # process "commandline" arguments</span>Â </td>
                      </tr><tr>
                        <th>Â </th><th>332</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; cmdargs = ''</span>Â </td>
                      </tr><tr>
                        <th>Â </th><th>333</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; cmdargs += '' if out is None else '--out={} '.format(out)</span>Â </td>
                      </tr><tr>
                        <th>Â </th><th>334</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; cmdargs += '' if iter is None else '--iter={} '.format(iter)</span>Â </td>
                      </tr><tr>
                        <th>Â </th><th>335</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; cmdargs += '' if param is None else '--param="{}" '.format(param)</span>Â </td>
                      </tr><tr>
                        <th>Â </th><th>336</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; cmdargs += '' if label is None else '--label="{}" '.format(label)</span>Â </td>
                      </tr><tr>
                        <th>Â </th><th>337</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; cmdargs += '' if nid is None else '--nid={} '.format(nid)</span>Â </td>
                      </tr><tr>
                        <th>Â </th><th>338</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; cmdargs += '' if cost == False else '--cost '</span>Â </td>
                      </tr><tr>
                        <th>Â </th><th>339</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; cmdargs += '' if legend == False else '--legend '</span>Â </td>
                      </tr><tr>
                        <th>Â </th><th>340</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; else:</span>Â </td>
                      </tr><tr>
                        <th>Â </th><th>341</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; cmdargs = ' ' + cmdargs</span>Â </td>
                      </tr><tr>
                        <th>Â </th><th>342</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; if isinstance(filename, basestring):</span>Â </td>
                      </tr><tr>
                        <th>Â </th><th>343</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; cmdargs = filename.split() + shlex.split(cmdargs)</span>Â </td>
                      </tr><tr>
                        <th>Â </th><th>344</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; else: # special case of passing in monitor instance</span>Â </td>
                      </tr><tr>
                        <th>Â </th><th>345</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; instance = filename</span>Â </td>
                      </tr><tr class="last">
                        <th>Â </th><th>346</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; cmdargs = shlex.split(cmdargs)</span>Â </td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>338</th><th>347</th><td class="l"><span></span>Â </td>
                  </tr><tr>
                          <th>339</th><th>348</th><td class="l"><span>&nbsp; &nbsp; #XXX: note that 'argparse' is new as of python2.7</span>Â </td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="http://trac.mystic.cacr.caltech.edu/project/mystic/browser/mystic/mystic/support.py?rev=810#L382">â€¦</a></th>
                  <th><a href="http://trac.mystic.cacr.caltech.edu/project/mystic/browser/mystic/mystic/support.py?rev=838#L391">â€¦</a></th>
                  <td>Â </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>382</th><th>391</th><td class="l"><span></span>Â </td>
                  </tr><tr>
                          <th>383</th><th>392</th><td class="l"><span>&nbsp; &nbsp; # get the name of the parameter log file</span>Â </td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>384</th><th>Â </th><td class="l"><span>&nbsp; &nbsp; params, cost = read_history(parsed_args[0])</span>Â </td>
                      </tr>
                      <tr>
                        <th>Â </th><th>393</th><td class="r"><span>&nbsp; &nbsp; if instance is None:</span>Â </td>
                      </tr><tr>
                        <th>Â </th><th>394</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; instance = parsed_args[0]</span>Â </td>
                      </tr><tr class="last">
                        <th>Â </th><th>395</th><td class="r"><span>&nbsp; &nbsp; params, cost = read_history(instance)</span>Â </td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>385</th><th>396</th><td class="l"><span></span>Â </td>
                  </tr><tr>
                          <th>386</th><th>397</th><td class="l"><span>&nbsp; &nbsp; if parsed_opts.cost: # also plot the cost</span>Â </td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="http://trac.mystic.cacr.caltech.edu/project/mystic/browser/mystic/mystic/support.py?rev=810#L548">â€¦</a></th>
                  <th><a href="http://trac.mystic.cacr.caltech.edu/project/mystic/browser/mystic/mystic/support.py?rev=838#L559">â€¦</a></th>
                  <td>Â </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>548</th><th>559</th><td class="l"><span>&nbsp; &nbsp; __quit = False</span>Â </td>
                  </tr><tr>
                          <th>549</th><th>560</th><td class="l"><span></span>Â </td>
                  </tr>
            </tbody><tbody class="add">
                  <tr class="last first">
                          <th>Â </th><th>561</th><td class="r"><ins>&nbsp; &nbsp; instance = None</ins>Â </td>
                  </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>550</th><th>562</th><td class="l"><span>&nbsp; &nbsp; # handle the special case where list is provided by sys.argv</span>Â </td>
                  </tr><tr>
                          <th>551</th><th>563</th><td class="l"><span>&nbsp; &nbsp; if isinstance(filename, (list,tuple)) and not kwds:</span>Â </td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="http://trac.mystic.cacr.caltech.edu/project/mystic/browser/mystic/mystic/support.py?rev=810#L555">â€¦</a></th>
                  <th><a href="http://trac.mystic.cacr.caltech.edu/project/mystic/browser/mystic/mystic/support.py?rev=838#L567">â€¦</a></th>
                  <td>Â </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>555</th><th>567</th><td class="l"><span>&nbsp; &nbsp; # 'everything else' is essentially the functional interface</span>Â </td>
                  </tr><tr>
                          <th>556</th><th>568</th><td class="l"><span>&nbsp; &nbsp; else:</span>Â </td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>557</th><th>Â </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; out = kwds.get('out', None)</span>Â </td>
                      </tr><tr>
                        <th>558</th><th>Â </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; bounds = kwds.get('bounds', None)</span>Â </td>
                      </tr><tr>
                        <th>559</th><th>Â </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; axes = kwds.get('axes', None)</span>Â </td>
                      </tr><tr>
                        <th>560</th><th>Â </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; iters = kwds.get('iters', None)</span>Â </td>
                      </tr><tr>
                        <th>561</th><th>Â </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; label = kwds.get('label', None)</span>Â </td>
                      </tr><tr>
                        <th>562</th><th>Â </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; nid = kwds.get('nid', None)</span>Â </td>
                      </tr><tr>
                        <th>563</th><th>Â </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; scale = kwds.get('scale', None)</span>Â </td>
                      </tr><tr>
                        <th>564</th><th>Â </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; flat = kwds.get('flat', False)</span>Â </td>
                      </tr><tr>
                        <th>565</th><th>Â </th><td class="l"><span></span>Â </td>
                      </tr><tr>
                        <th>566</th><th>Â </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; # process "commandline" arguments</span>Â </td>
                      </tr><tr>
                        <th>567</th><th>Â </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; cmdargs = ''</span>Â </td>
                      </tr><tr>
                        <th>568</th><th>Â </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; cmdargs += '' if out is None else '--out={} '.format(out)</span>Â </td>
                      </tr><tr>
                        <th>569</th><th>Â </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; cmdargs += '' if bounds is None else '--bounds="{}" '.format(bounds)</span>Â </td>
                      </tr><tr>
                        <th>570</th><th>Â </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; cmdargs += '' if axes is None else '--axes="{}" '.format(axes)</span>Â </td>
                      </tr><tr>
                        <th>571</th><th>Â </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; cmdargs += '' if iters is None else '--iters="{}" '.format(iters)</span>Â </td>
                      </tr><tr>
                        <th>572</th><th>Â </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; cmdargs += '' if label is None else '--label="{}" '.format(label)</span>Â </td>
                      </tr><tr>
                        <th>573</th><th>Â </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; cmdargs += '' if nid is None else '--nid={} '.format(nid)</span>Â </td>
                      </tr><tr>
                        <th>574</th><th>Â </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; cmdargs += '' if scale is None else '--scale={} '.format(scale)</span>Â </td>
                      </tr><tr>
                        <th>575</th><th>Â </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; cmdargs += '' if flat == False else '--flat '</span>Â </td>
                      </tr><tr>
                        <th>576</th><th>Â </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; cmdargs = filename.split() + shlex.split(cmdargs)</span>Â </td>
                      </tr>
                      <tr>
                        <th>Â </th><th>569</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; cmdargs = kwds.get('kwds', '')</span>Â </td>
                      </tr><tr>
                        <th>Â </th><th>570</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; if not cmdargs:</span>Â </td>
                      </tr><tr>
                        <th>Â </th><th>571</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; out = kwds.get('out', None)</span>Â </td>
                      </tr><tr>
                        <th>Â </th><th>572</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; bounds = kwds.get('bounds', None)</span>Â </td>
                      </tr><tr>
                        <th>Â </th><th>573</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; axes = kwds.get('axes', None)</span>Â </td>
                      </tr><tr>
                        <th>Â </th><th>574</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; iters = kwds.get('iters', None)</span>Â </td>
                      </tr><tr>
                        <th>Â </th><th>575</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; label = kwds.get('label', None)</span>Â </td>
                      </tr><tr>
                        <th>Â </th><th>576</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; nid = kwds.get('nid', None)</span>Â </td>
                      </tr><tr>
                        <th>Â </th><th>577</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; scale = kwds.get('scale', None)</span>Â </td>
                      </tr><tr>
                        <th>Â </th><th>578</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; flat = kwds.get('flat', False)</span>Â </td>
                      </tr><tr>
                        <th>Â </th><th>579</th><td class="r"><span></span>Â </td>
                      </tr><tr>
                        <th>Â </th><th>580</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; # process "commandline" arguments</span>Â </td>
                      </tr><tr>
                        <th>Â </th><th>581</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; cmdargs = ''</span>Â </td>
                      </tr><tr>
                        <th>Â </th><th>582</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; cmdargs += '' if out is None else '--out={} '.format(out)</span>Â </td>
                      </tr><tr>
                        <th>Â </th><th>583</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; cmdargs += '' if bounds is None else '--bounds="{}" '.format(bounds)</span>Â </td>
                      </tr><tr>
                        <th>Â </th><th>584</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; cmdargs += '' if axes is None else '--axes="{}" '.format(axes)</span>Â </td>
                      </tr><tr>
                        <th>Â </th><th>585</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; cmdargs += '' if iters is None else '--iters="{}" '.format(iters)</span>Â </td>
                      </tr><tr>
                        <th>Â </th><th>586</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; cmdargs += '' if label is None else '--label="{}" '.format(label)</span>Â </td>
                      </tr><tr>
                        <th>Â </th><th>587</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; cmdargs += '' if nid is None else '--nid={} '.format(nid)</span>Â </td>
                      </tr><tr>
                        <th>Â </th><th>588</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; cmdargs += '' if scale is None else '--scale={} '.format(scale)</span>Â </td>
                      </tr><tr>
                        <th>Â </th><th>589</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; cmdargs += '' if flat == False else '--flat '</span>Â </td>
                      </tr><tr>
                        <th>Â </th><th>590</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; else:</span>Â </td>
                      </tr><tr>
                        <th>Â </th><th>591</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; cmdargs = ' ' + cmdargs</span>Â </td>
                      </tr><tr>
                        <th>Â </th><th>592</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; if isinstance(filename, basestring):</span>Â </td>
                      </tr><tr>
                        <th>Â </th><th>593</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; cmdargs = filename.split() + shlex.split(cmdargs)</span>Â </td>
                      </tr><tr>
                        <th>Â </th><th>594</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; else: # special case of passing in monitor instance</span>Â </td>
                      </tr><tr>
                        <th>Â </th><th>595</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; instance = filename</span>Â </td>
                      </tr><tr class="last">
                        <th>Â </th><th>596</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; cmdargs = shlex.split(cmdargs)</span>Â </td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>577</th><th>597</th><td class="l"><span></span>Â </td>
                  </tr><tr>
                          <th>578</th><th>598</th><td class="l"><span>&nbsp; &nbsp; #XXX: note that 'argparse' is new as of python2.7</span>Â </td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="http://trac.mystic.cacr.caltech.edu/project/mystic/browser/mystic/mystic/support.py?rev=810#L626">â€¦</a></th>
                  <th><a href="http://trac.mystic.cacr.caltech.edu/project/mystic/browser/mystic/mystic/support.py?rev=838#L646">â€¦</a></th>
                  <td>Â </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>626</th><th>646</th><td class="l"><span></span>Â </td>
                  </tr><tr>
                          <th>627</th><th>647</th><td class="l"><span>&nbsp; &nbsp; # get the name of the parameter log file</span>Â </td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>628</th><th>Â </th><td class="l"><span>&nbsp; &nbsp; params, _cost = read_history(parsed_args[0])</span>Â </td>
                      </tr>
                      <tr>
                        <th>Â </th><th>648</th><td class="r"><span>&nbsp; &nbsp; if instance is None:</span>Â </td>
                      </tr><tr>
                        <th>Â </th><th>649</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; instance = parsed_args[0]</span>Â </td>
                      </tr><tr class="last">
                        <th>Â </th><th>650</th><td class="r"><span>&nbsp; &nbsp; params, _cost = read_history(instance)</span>Â </td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>629</th><th>651</th><td class="l"><span>&nbsp; &nbsp; # would be nice to use meta = ['wx','wx2','x','x2','wy',...]</span>Â </td>
                  </tr><tr>
                          <th>630</th><th>652</th><td class="l"><span>&nbsp; &nbsp; # exec "from %s import meta" % file</span>Â </td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="http://trac.mystic.cacr.caltech.edu/project/mystic/browser/mystic/mystic/support.py?rev=810#L828">â€¦</a></th>
                  <th><a href="http://trac.mystic.cacr.caltech.edu/project/mystic/browser/mystic/mystic/support.py?rev=838#L850">â€¦</a></th>
                  <td>Â </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>828</th><th>850</th><td class="l"><span>&nbsp; &nbsp; __quit = False</span>Â </td>
                  </tr><tr>
                          <th>829</th><th>851</th><td class="l"><span></span>Â </td>
                  </tr>
            </tbody><tbody class="add">
                  <tr class="last first">
                          <th>Â </th><th>852</th><td class="r"><ins>&nbsp; &nbsp; instance = None</ins>Â </td>
                  </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>830</th><th>853</th><td class="l"><span>&nbsp; &nbsp; # handle the special case where list is provided by sys.argv</span>Â </td>
                  </tr><tr>
                          <th>831</th><th>854</th><td class="l"><span>&nbsp; &nbsp; if isinstance(filename, (list,tuple)) and not kwds:</span>Â </td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="http://trac.mystic.cacr.caltech.edu/project/mystic/browser/mystic/mystic/support.py?rev=810#L835">â€¦</a></th>
                  <th><a href="http://trac.mystic.cacr.caltech.edu/project/mystic/browser/mystic/mystic/support.py?rev=838#L858">â€¦</a></th>
                  <td>Â </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>835</th><th>858</th><td class="l"><span>&nbsp; &nbsp; # 'everything else' is essentially the functional interface</span>Â </td>
                  </tr><tr>
                          <th>836</th><th>859</th><td class="l"><span>&nbsp; &nbsp; else:</span>Â </td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>837</th><th>Â </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; out = kwds.get('out', None)</span>Â </td>
                      </tr><tr>
                        <th>838</th><th>Â </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; bounds = kwds.get('bounds', None)</span>Â </td>
                      </tr><tr>
                        <th>839</th><th>Â </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; axes = kwds.get('axes', None)</span>Â </td>
                      </tr><tr>
                        <th>840</th><th>Â </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; weight = kwds.get('weight', None)</span>Â </td>
                      </tr><tr>
                        <th>841</th><th>Â </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; iters = kwds.get('iters', None)</span>Â </td>
                      </tr><tr>
                        <th>842</th><th>Â </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; label = kwds.get('label', None)</span>Â </td>
                      </tr><tr>
                        <th>843</th><th>Â </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; nid = kwds.get('nid', None)</span>Â </td>
                      </tr><tr>
                        <th>844</th><th>Â </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; scale = kwds.get('scale', None)</span>Â </td>
                      </tr><tr>
                        <th>845</th><th>Â </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; flat = kwds.get('flat', False)</span>Â </td>
                      </tr><tr>
                        <th>846</th><th>Â </th><td class="l"><span></span>Â </td>
                      </tr><tr>
                        <th>847</th><th>Â </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; # process "commandline" arguments</span>Â </td>
                      </tr><tr>
                        <th>848</th><th>Â </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; cmdargs = ''</span>Â </td>
                      </tr><tr>
                        <th>849</th><th>Â </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; cmdargs += '' if out is None else '--out={} '.format(out)</span>Â </td>
                      </tr><tr>
                        <th>850</th><th>Â </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; cmdargs += '' if bounds is None else '--bounds="{}" '.format(bounds)</span>Â </td>
                      </tr><tr>
                        <th>851</th><th>Â </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; cmdargs += '' if axes is None else '--axes="{}" '.format(axes)</span>Â </td>
                      </tr><tr>
                        <th>852</th><th>Â </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; cmdargs += '' if weight is None else '--weight="{}" '.format(weight)</span>Â </td>
                      </tr><tr>
                        <th>853</th><th>Â </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; cmdargs += '' if iters is None else '--iters="{}" '.format(iters)</span>Â </td>
                      </tr><tr>
                        <th>854</th><th>Â </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; cmdargs += '' if label is None else '--label="{}" '.format(label)</span>Â </td>
                      </tr><tr>
                        <th>855</th><th>Â </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; cmdargs += '' if nid is None else '--nid={} '.format(nid)</span>Â </td>
                      </tr><tr>
                        <th>856</th><th>Â </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; cmdargs += '' if scale is None else '--scale={} '.format(scale)</span>Â </td>
                      </tr><tr>
                        <th>857</th><th>Â </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; cmdargs += '' if flat == False else '--flat '</span>Â </td>
                      </tr><tr>
                        <th>858</th><th>Â </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; cmdargs = filename.split() + shlex.split(cmdargs)</span>Â </td>
                      </tr>
                      <tr>
                        <th>Â </th><th>860</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; cmdargs = kwds.get('kwds', '')</span>Â </td>
                      </tr><tr>
                        <th>Â </th><th>861</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; if not cmdargs:</span>Â </td>
                      </tr><tr>
                        <th>Â </th><th>862</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; out = kwds.get('out', None)</span>Â </td>
                      </tr><tr>
                        <th>Â </th><th>863</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; bounds = kwds.get('bounds', None)</span>Â </td>
                      </tr><tr>
                        <th>Â </th><th>864</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; axes = kwds.get('axes', None)</span>Â </td>
                      </tr><tr>
                        <th>Â </th><th>865</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; weight = kwds.get('weight', None)</span>Â </td>
                      </tr><tr>
                        <th>Â </th><th>866</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; iters = kwds.get('iters', None)</span>Â </td>
                      </tr><tr>
                        <th>Â </th><th>867</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; label = kwds.get('label', None)</span>Â </td>
                      </tr><tr>
                        <th>Â </th><th>868</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; nid = kwds.get('nid', None)</span>Â </td>
                      </tr><tr>
                        <th>Â </th><th>869</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; scale = kwds.get('scale', None)</span>Â </td>
                      </tr><tr>
                        <th>Â </th><th>870</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; flat = kwds.get('flat', False)</span>Â </td>
                      </tr><tr>
                        <th>Â </th><th>871</th><td class="r"><span></span>Â </td>
                      </tr><tr>
                        <th>Â </th><th>872</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; # process "commandline" arguments</span>Â </td>
                      </tr><tr>
                        <th>Â </th><th>873</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; cmdargs = ''</span>Â </td>
                      </tr><tr>
                        <th>Â </th><th>874</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; cmdargs += '' if out is None else '--out={} '.format(out)</span>Â </td>
                      </tr><tr>
                        <th>Â </th><th>875</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; cmdargs += '' if bounds is None else '--bounds="{}" '.format(bounds)</span>Â </td>
                      </tr><tr>
                        <th>Â </th><th>876</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; cmdargs += '' if axes is None else '--axes="{}" '.format(axes)</span>Â </td>
                      </tr><tr>
                        <th>Â </th><th>877</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; cmdargs += '' if weight is None else '--weight="{}" '.format(weight)</span>Â </td>
                      </tr><tr>
                        <th>Â </th><th>878</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; cmdargs += '' if iters is None else '--iters="{}" '.format(iters)</span>Â </td>
                      </tr><tr>
                        <th>Â </th><th>879</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; cmdargs += '' if label is None else '--label="{}" '.format(label)</span>Â </td>
                      </tr><tr>
                        <th>Â </th><th>880</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; cmdargs += '' if nid is None else '--nid={} '.format(nid)</span>Â </td>
                      </tr><tr>
                        <th>Â </th><th>881</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; cmdargs += '' if scale is None else '--scale={} '.format(scale)</span>Â </td>
                      </tr><tr>
                        <th>Â </th><th>882</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; cmdargs += '' if flat == False else '--flat '</span>Â </td>
                      </tr><tr>
                        <th>Â </th><th>883</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; else:</span>Â </td>
                      </tr><tr>
                        <th>Â </th><th>884</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; cmdargs = ' ' + cmdargs</span>Â </td>
                      </tr><tr>
                        <th>Â </th><th>885</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; if isinstance(filename, basestring):</span>Â </td>
                      </tr><tr>
                        <th>Â </th><th>886</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; cmdargs = filename.split() + shlex.split(cmdargs)</span>Â </td>
                      </tr><tr>
                        <th>Â </th><th>887</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; else: # special case of passing in monitor instance</span>Â </td>
                      </tr><tr>
                        <th>Â </th><th>888</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; instance = filename</span>Â </td>
                      </tr><tr class="last">
                        <th>Â </th><th>889</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; cmdargs = shlex.split(cmdargs)</span>Â </td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>859</th><th>890</th><td class="l"><span></span>Â </td>
                  </tr><tr>
                          <th>860</th><th>891</th><td class="l"><span>&nbsp; &nbsp; #XXX: note that 'argparse' is new as of python2.7</span>Â </td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="http://trac.mystic.cacr.caltech.edu/project/mystic/browser/mystic/mystic/support.py?rev=810#L911">â€¦</a></th>
                  <th><a href="http://trac.mystic.cacr.caltech.edu/project/mystic/browser/mystic/mystic/support.py?rev=838#L942">â€¦</a></th>
                  <td>Â </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>911</th><th>942</th><td class="l"><span></span>Â </td>
                  </tr><tr>
                          <th>912</th><th>943</th><td class="l"><span>&nbsp; &nbsp; # get the name of the parameter log file</span>Â </td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>913</th><th>Â </th><td class="l"><span>&nbsp; &nbsp; params, _cost = read_history(parsed_args[0])</span>Â </td>
                      </tr>
                      <tr>
                        <th>Â </th><th>944</th><td class="r"><span>&nbsp; &nbsp; if instance is None:</span>Â </td>
                      </tr><tr>
                        <th>Â </th><th>945</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; instance = parsed_args[0]</span>Â </td>
                      </tr><tr class="last">
                        <th>Â </th><th>946</th><td class="r"><span>&nbsp; &nbsp; params, _cost = read_history(instance)</span>Â </td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>914</th><th>947</th><td class="l"><span>&nbsp; &nbsp; # would be nice to use meta = ['wx','wx2','x','x2','wy',...]</span>Â </td>
                  </tr><tr>
                          <th>915</th><th>948</th><td class="l"><span>&nbsp; &nbsp; # exec "from %s import meta" % file</span>Â </td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="http://trac.mystic.cacr.caltech.edu/project/mystic/browser/mystic/mystic/support.py?rev=810#L1141">â€¦</a></th>
                  <th><a href="http://trac.mystic.cacr.caltech.edu/project/mystic/browser/mystic/mystic/support.py?rev=838#L1174">â€¦</a></th>
                  <td>Â </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>1141</th><th>1174</th><td class="l"><span>&nbsp; &nbsp; __quit = False</span>Â </td>
                  </tr><tr>
                          <th>1142</th><th>1175</th><td class="l"><span></span>Â </td>
                  </tr>
            </tbody><tbody class="add">
                  <tr class="last first">
                          <th>Â </th><th>1176</th><td class="r"><ins>&nbsp; &nbsp; instance = None</ins>Â </td>
                  </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>1143</th><th>1177</th><td class="l"><span>&nbsp; &nbsp; # handle the special case where list is provided by sys.argv</span>Â </td>
                  </tr><tr>
                          <th>1144</th><th>1178</th><td class="l"><span>&nbsp; &nbsp; if isinstance(filename, (list,tuple)) and not kwds:</span>Â </td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="http://trac.mystic.cacr.caltech.edu/project/mystic/browser/mystic/mystic/support.py?rev=810#L1148">â€¦</a></th>
                  <th><a href="http://trac.mystic.cacr.caltech.edu/project/mystic/browser/mystic/mystic/support.py?rev=838#L1182">â€¦</a></th>
                  <td>Â </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>1148</th><th>1182</th><td class="l"><span>&nbsp; &nbsp; # 'everything else' is essentially the functional interface</span>Â </td>
                  </tr><tr>
                          <th>1149</th><th>1183</th><td class="l"><span>&nbsp; &nbsp; else:</span>Â </td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>1150</th><th>Â </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; out = kwds.get('out', None)</span>Â </td>
                      </tr><tr>
                        <th>1151</th><th>Â </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; bounds = kwds.get('bounds', None)</span>Â </td>
                      </tr><tr>
                        <th>1152</th><th>Â </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; iters = kwds.get('iters', None)</span>Â </td>
                      </tr><tr>
                        <th>1153</th><th>Â </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; label = kwds.get('label', None)</span>Â </td>
                      </tr><tr>
                        <th>1154</th><th>Â </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; dim = kwds.get('dim', None)</span>Â </td>
                      </tr><tr>
                        <th>1155</th><th>Â </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; filter = kwds.get('filter', None)</span>Â </td>
                      </tr><tr>
                        <th>1156</th><th>Â </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; mask = kwds.get('mask', None)</span>Â </td>
                      </tr><tr>
                        <th>1157</th><th>Â </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; nid = kwds.get('nid', None)</span>Â </td>
                      </tr><tr>
                        <th>1158</th><th>Â </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; scale = kwds.get('scale', None)</span>Â </td>
                      </tr><tr>
                        <th>1159</th><th>Â </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; gap = kwds.get('gap', None)</span>Â </td>
                      </tr><tr>
                        <th>1160</th><th>Â </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; data = kwds.get('data', False)</span>Â </td>
                      </tr><tr>
                        <th>1161</th><th>Â </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; cones = kwds.get('cones', False)</span>Â </td>
                      </tr><tr>
                        <th>1162</th><th>Â </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; vertical = kwds.get('vertical', False)</span>Â </td>
                      </tr><tr>
                        <th>1163</th><th>Â </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; flat = kwds.get('flat', False)</span>Â </td>
                      </tr><tr>
                        <th>1164</th><th>Â </th><td class="l"><span></span>Â </td>
                      </tr><tr>
                        <th>1165</th><th>Â </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; # process "commandline" arguments</span>Â </td>
                      </tr><tr>
                        <th>1166</th><th>Â </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; cmdargs = ''</span>Â </td>
                      </tr><tr>
                        <th>1167</th><th>Â </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; cmdargs += '' if out is None else '--out={} '.format(out)</span>Â </td>
                      </tr><tr>
                        <th>1168</th><th>Â </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; cmdargs += '' if bounds is None else '--bounds="{}" '.format(bounds)</span>Â </td>
                      </tr><tr>
                        <th>1169</th><th>Â </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; cmdargs += '' if iters is None else '--iters="{}" '.format(iters)</span>Â </td>
                      </tr><tr>
                        <th>1170</th><th>Â </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; cmdargs += '' if label is None else '--label="{}" '.format(label)</span>Â </td>
                      </tr><tr>
                        <th>1171</th><th>Â </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; cmdargs += '' if dim is None else '--dim="{}" '.format(dim)</span>Â </td>
                      </tr><tr>
                        <th>1172</th><th>Â </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; cmdargs += '' if filter is None else '--filter="{}" '.format(filter)</span>Â </td>
                      </tr><tr>
                        <th>1173</th><th>Â </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; cmdargs += '' if mask is None else '--mask={} '.format(mask)</span>Â </td>
                      </tr><tr>
                        <th>1174</th><th>Â </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; cmdargs += '' if nid is None else '--nid={} '.format(nid)</span>Â </td>
                      </tr><tr>
                        <th>1175</th><th>Â </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; cmdargs += '' if scale is None else '--scale={} '.format(scale)</span>Â </td>
                      </tr><tr>
                        <th>1176</th><th>Â </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; cmdargs += '' if gap is None else '--gap={} '.format(gap)</span>Â </td>
                      </tr><tr>
                        <th>1177</th><th>Â </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; cmdargs += '' if data == False else '--data '</span>Â </td>
                      </tr><tr>
                        <th>1178</th><th>Â </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; cmdargs += '' if cones == False else '--cones '</span>Â </td>
                      </tr><tr>
                        <th>1179</th><th>Â </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; cmdargs += '' if vertical == False else '--vertical '</span>Â </td>
                      </tr><tr>
                        <th>1180</th><th>Â </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; cmdargs += '' if flat == False else '--flat '</span>Â </td>
                      </tr><tr>
                        <th>1181</th><th>Â </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; cmdargs = filename.split() + shlex.split(cmdargs)</span>Â </td>
                      </tr>
                      <tr>
                        <th>Â </th><th>1184</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; cmdargs = kwds.get('kwds', '')</span>Â </td>
                      </tr><tr>
                        <th>Â </th><th>1185</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; if not cmdargs:</span>Â </td>
                      </tr><tr>
                        <th>Â </th><th>1186</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; out = kwds.get('out', None)</span>Â </td>
                      </tr><tr>
                        <th>Â </th><th>1187</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; bounds = kwds.get('bounds', None)</span>Â </td>
                      </tr><tr>
                        <th>Â </th><th>1188</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; iters = kwds.get('iters', None)</span>Â </td>
                      </tr><tr>
                        <th>Â </th><th>1189</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; label = kwds.get('label', None)</span>Â </td>
                      </tr><tr>
                        <th>Â </th><th>1190</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; dim = kwds.get('dim', None)</span>Â </td>
                      </tr><tr>
                        <th>Â </th><th>1191</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; filter = kwds.get('filter', None)</span>Â </td>
                      </tr><tr>
                        <th>Â </th><th>1192</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; mask = kwds.get('mask', None)</span>Â </td>
                      </tr><tr>
                        <th>Â </th><th>1193</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; nid = kwds.get('nid', None)</span>Â </td>
                      </tr><tr>
                        <th>Â </th><th>1194</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; scale = kwds.get('scale', None)</span>Â </td>
                      </tr><tr>
                        <th>Â </th><th>1195</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; gap = kwds.get('gap', None)</span>Â </td>
                      </tr><tr>
                        <th>Â </th><th>1196</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; data = kwds.get('data', False)</span>Â </td>
                      </tr><tr>
                        <th>Â </th><th>1197</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; cones = kwds.get('cones', False)</span>Â </td>
                      </tr><tr>
                        <th>Â </th><th>1198</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; vertical = kwds.get('vertical', False)</span>Â </td>
                      </tr><tr>
                        <th>Â </th><th>1199</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; flat = kwds.get('flat', False)</span>Â </td>
                      </tr><tr>
                        <th>Â </th><th>1200</th><td class="r"><span></span>Â </td>
                      </tr><tr>
                        <th>Â </th><th>1201</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; # process "commandline" arguments</span>Â </td>
                      </tr><tr>
                        <th>Â </th><th>1202</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; cmdargs = ''</span>Â </td>
                      </tr><tr>
                        <th>Â </th><th>1203</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; cmdargs += '' if out is None else '--out={} '.format(out)</span>Â </td>
                      </tr><tr>
                        <th>Â </th><th>1204</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; cmdargs += '' if bounds is None else '--bounds="{}" '.format(bounds)</span>Â </td>
                      </tr><tr>
                        <th>Â </th><th>1205</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; cmdargs += '' if iters is None else '--iters="{}" '.format(iters)</span>Â </td>
                      </tr><tr>
                        <th>Â </th><th>1206</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; cmdargs += '' if label is None else '--label="{}" '.format(label)</span>Â </td>
                      </tr><tr>
                        <th>Â </th><th>1207</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; cmdargs += '' if dim is None else '--dim="{}" '.format(dim)</span>Â </td>
                      </tr><tr>
                        <th>Â </th><th>1208</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; cmdargs += '' if filter is None else '--filter="{}" '.format(filter)</span>Â </td>
                      </tr><tr>
                        <th>Â </th><th>1209</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; cmdargs += '' if mask is None else '--mask={} '.format(mask)</span>Â </td>
                      </tr><tr>
                        <th>Â </th><th>1210</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; cmdargs += '' if nid is None else '--nid={} '.format(nid)</span>Â </td>
                      </tr><tr>
                        <th>Â </th><th>1211</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; cmdargs += '' if scale is None else '--scale={} '.format(scale)</span>Â </td>
                      </tr><tr>
                        <th>Â </th><th>1212</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; cmdargs += '' if gap is None else '--gap={} '.format(gap)</span>Â </td>
                      </tr><tr>
                        <th>Â </th><th>1213</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; cmdargs += '' if data == False else '--data '</span>Â </td>
                      </tr><tr>
                        <th>Â </th><th>1214</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; cmdargs += '' if cones == False else '--cones '</span>Â </td>
                      </tr><tr>
                        <th>Â </th><th>1215</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; cmdargs += '' if vertical == False else '--vertical '</span>Â </td>
                      </tr><tr>
                        <th>Â </th><th>1216</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; cmdargs += '' if flat == False else '--flat '</span>Â </td>
                      </tr><tr>
                        <th>Â </th><th>1217</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; else:</span>Â </td>
                      </tr><tr>
                        <th>Â </th><th>1218</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; cmdargs = ' ' + cmdargs</span>Â </td>
                      </tr><tr>
                        <th>Â </th><th>1219</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; if isinstance(filename, basestring):</span>Â </td>
                      </tr><tr>
                        <th>Â </th><th>1220</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; cmdargs = filename.split() + shlex.split(cmdargs)</span>Â </td>
                      </tr><tr>
                        <th>Â </th><th>1221</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; else: # special case of passing in monitor instance</span>Â </td>
                      </tr><tr>
                        <th>Â </th><th>1222</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; instance = filename</span>Â </td>
                      </tr><tr class="last">
                        <th>Â </th><th>1223</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; cmdargs = shlex.split(cmdargs)</span>Â </td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>1182</th><th>1224</th><td class="l"><span></span>Â </td>
                  </tr><tr>
                          <th>1183</th><th>1225</th><td class="l"><span>&nbsp; &nbsp; #XXX: note that 'argparse' is new as of python2.7</span>Â </td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="http://trac.mystic.cacr.caltech.edu/project/mystic/browser/mystic/mystic/support.py?rev=810#L1246">â€¦</a></th>
                  <th><a href="http://trac.mystic.cacr.caltech.edu/project/mystic/browser/mystic/mystic/support.py?rev=838#L1288">â€¦</a></th>
                  <td>Â </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>1246</th><th>1288</th><td class="l"><span></span>Â </td>
                  </tr><tr>
                          <th>1247</th><th>1289</th><td class="l"><span>&nbsp; &nbsp; # get the name of the parameter log file</span>Â </td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>1248</th><th>Â </th><td class="l"><span>&nbsp; &nbsp; params, _cost = read_history(parsed_args[0])</span>Â </td>
                      </tr>
                      <tr>
                        <th>Â </th><th>1290</th><td class="r"><span>&nbsp; &nbsp; if instance is None:</span>Â </td>
                      </tr><tr>
                        <th>Â </th><th>1291</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; instance = parsed_args[0]</span>Â </td>
                      </tr><tr class="last">
                        <th>Â </th><th>1292</th><td class="r"><span>&nbsp; &nbsp; params, _cost = read_history(instance)</span>Â </td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>1249</th><th>1293</th><td class="l"><span>&nbsp; &nbsp; # would be nice to use meta = ['wx','wx2','x','x2','wy',...]</span>Â </td>
                  </tr><tr>
                          <th>1250</th><th>1294</th><td class="l"><span>&nbsp; &nbsp; # exec "from %s import meta" % file</span>Â </td>
                  </tr>
            </tbody>
        </table>
      </li>
  </ul>
</div>
        <div id="help"><strong>Note:</strong> See <a href="../../wiki/TracChangeset.html">TracChangeset</a>
          for help on using the changeset viewer.</div>
      </div>
    </div>
    <div id="altlinks">
      <h3>Download in other formats:</h3>
      <ul>
        <li class="first">
          <a rel="nofollow" href="http://trac.mystic.cacr.caltech.edu/project/mystic/changeset/838/?format=diff&amp;new=838" class="diff">Unified Diff</a>
        </li><li class="last">
          <a rel="nofollow" href="http://trac.mystic.cacr.caltech.edu/project/mystic/changeset/838/?format=zip&amp;new=838" class="zip">Zip Archive</a>
        </li>
      </ul>
    </div>
    </div>
    <div id="footer" lang="en" xml:lang="en"><hr />
      <a id="uqf" href="http://www.uqfoundation.org/"><img src="http://www.cacr.caltech.edu/projects/mystic/UQ.png" height="38" width="50" alt="UQ Foundation" /></a>
      <a id="caltech"><img src="http://www.cacr.caltech.edu/projects/mystic/Caltech.png" height="40" width="40" alt="Caltech" /></a>
      <a id="nsf"><img src="http://www.cacr.caltech.edu/projects/mystic/NSF.png" height="42" width="42" alt="NSF" /></a>
      <a id="afosr"><img src="http://www.cacr.caltech.edu/projects/mystic/AFOSR.png" height="40" width="40" alt="AFOSR" /></a>
      <a id="doe"><img src="http://www.cacr.caltech.edu/projects/mystic/DOE.png" height="40" width="40" alt="DOE" /></a>
      <a id="nnsa"><img src="http://www.cacr.caltech.edu/projects/mystic/NNSA.png" height="40" width="100" alt="NNSA" /></a>
      <p class="left">Powered by <a href="../../about.html"><strong>Trac 0.12</strong></a><br />
        and coffee, lots of coffee.<br />
        This project is funded by...</p>
      <p class="right">For more information, please visit<br />the mystic project homepage at<br /><a href="http://www.cacr.caltech.edu/projects/mystic">http://www.cacr.caltech.edu/projects/mystic</a></p>
    </div>
    <div id="sitefooter">
    </div>
  </body>

<!-- Mirrored from trac.mystic.cacr.caltech.edu/project/mystic/changeset/838/ by HTTrack Website Copier/3.x [XR&CO'2014], Wed, 18 May 2016 23:22:41 GMT -->
</html>